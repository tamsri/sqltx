{
    "scopeName": "source.sqlt",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#functions"
        },
        {
            "include": "#identifiers"
        },
        {
            "include": "#clauses"
        },
        {
            "include": "#cte"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "match": "--.*$",
                    "name": "comment.line.double-dash.sqlt"
                },
                {
                    "begin": "/\\*",
                    "end": "\\*/",
                    "name": "comment.block.sqlt"
                }
            ]
        },
        "keywords": {
            "match": "\\b(?:SELECT|FROM|WHERE|JOIN|GROUP BY)\\b",
            "name": "keyword.sqlt"
        },
        "strings": {
            "match": "'(?:[^'\\\\]|\\\\.)*'",
            "name": "string.quoted.single.sqlt"
        },
        "numbers": {
            "match": "\\b\\d+\\b",
            "name": "constant.numeric.sqlt"
        },
        "operators": {
            "match": "\\b(?:=|<|>|\\+|-|\\*|\\/)\\b",
            "name": "keyword.operator.sqlt"
        },
        "functions": {
            "match": "\\b(?:COUNT|SUM|AVG)\\b",
            "name": "support.function.aggregate.sqlt"
        },
        "identifiers": {
            "match": "\\b\\w+\\b",
            "name": "variable.other.sqlt"
        },
        "clauses": {
            "match": "\\b(?:SELECT|FROM|WHERE|JOIN|GROUP BY)\\b",
            "name": "keyword.control.sqlt"
        },
        "cte": {
            "match": "\\bWITH\\b",
            "name": "keyword.control.cte.sqlt"
        }
    }
}

